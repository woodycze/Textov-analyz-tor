import time
import random

# Přivítaní uživatele
def uvod():
    print("Hi there!")
    print("-----------------------------------------------")
    time.sleep(1)
    print("I've generated a random 4 digit number for you. First number is not 0.")
    time.sleep(1)
    print("Let's play a bulls and cows game.")
    print("-----------------------------------------------")

# Vygenerování 4 ciferného čísla pro hru, tak aby nezačínalo 0
def generuj_cisla():
    # generování od 1 do 9
    numbers = [random.randint(1,9)] 
    while len(numbers) < 4:
        # generování od 0 do 9
        new_number = random.randint(0, 9)
        # kontrola jestli se dané číslo již nenachází v listu
        if new_number not in numbers:
            numbers.append(new_number)
    print(numbers[0],numbers[1],numbers[2],numbers[3])
    return numbers

# Uživatelský vstup. Hráč zadá 4 místné číslo, které má
# jen 4 čísla a žádná číslice se neopakuje
def hadej():
    while True:
        guess_number = input("Enter a number:")
        if not guess_number.isdigit() or len(guess_number) != 4:
            print("Input must be 4 digits only. Enter again:")
            continue

        guess_number_list = [int(digit) for digit in guess_number]
        3
        if len(guess_number_list) != len(set(guess_number_list)):
            print("The numbers entered must be unique. Enter again:")
            continue  
        else:
            break 
    return guess_number_list

# Spočítání bulls a cows. Kolikrát uživatel trefil číslo a přímo i pozici.
# Cyklus for zjišťuje jestli se číslo nachází v listu a jestli je trefena 
# i správná pozice čísla.
# Bulls pro uhodnutí čísla i jeho pozice
# Cows pro uhodnutí čísla ale ne jeho pozice
def spocitat_bulls_cows(numbers, guess_number_list):
    bulls = 0
    cows = 0
    for a in range(len(numbers)):
        if numbers[a] == guess_number_list[a]:
            bulls += 1
        elif guess_number_list[a] in numbers and numbers[a] != guess_number_list[a]:
            cows += 1
        else:
            continue 
    return bulls, cows

# Funkce, které uvede do chodu celou hru a začne počítat jak dlouho
# hráči trvá uhodnout číslo a na kolik pokusů         
def hra():
    start = time.time()
    guess_count = 0
    numbers = generuj_cisla()
    while True:
        guess_count += 1
        guess_number_list = hadej()
        bulls, cows = spocitat_bulls_cows(numbers, guess_number_list)
        
        if bulls == 1 and cows == 1:
            print("Bull", bulls, "a cow", cows)
        else:
            print("Bulls", bulls, "a cows", cows)
        
        if numbers == guess_number_list:
            break

    end = time.time()
    total_time = end - start
    formatted_time = time.strftime("%H:%M:%S", time.gmtime(total_time))        
    print("Correct, you've guessed the right number in", guess_count, "guesses and",formatted_time)
    return guess_count, formatted_time

# Počítání statistiky jednotlivých her, dokud hráč neukončí hru.
# V každé řádce se vypíše na kolik pokusů hráč číslo uhádnul 
# a jak dlouho mu to trvalo
def statistika():
    print("\nGame stats:")
    if not guess_count_list:
        print("No statistics to show.")
        return
    for i in range(len(guess_count_list)):
        print(f"Game {i+1}: Guesses: {guess_count_list[i]}, Time: {formatted_time_list[i]}")
    print("\n")

# Uvedení celého programu do chodu se zapisováním údajů do listu pro statistiku.
# Dotázání hráče jestli chce dál pokračovat ve hře dalším vygenerováním čísla.   
if __name__ == "__main__":
    guess_count_list = []
    formatted_time_list = []
    uvod()
    while True:
        guess_count, formatted_time = hra()
        guess_count_list.append(guess_count)
        formatted_time_list.append(formatted_time)
        while True:
            hrat_znovu = input("Do you want to play again? (y/n): ").lower()
            if hrat_znovu in ["y", "n"]:
                break
            else:
                print("Invalid input. Please enter 'y' for yes or 'n' for no.")
    
        if hrat_znovu == "n":
            break
    statistika()
